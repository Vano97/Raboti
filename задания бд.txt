
Однотабличные запросы
1 
SELECT name,surname 
FROM students 
where score >2 and score <5 

или
SELECT name,surname 
FROM students 
where score between 2 and 5 

2 
SELECT name,surname 
FROM students 
where "N-GR" >200 

SELECT name,surname,"N-GR" 
from students 
where "N-GR" like '2__' 

3 
SELECT name,surname,"N-GR" 
from students 
where to_char(BDT, 'YYYY') like >'2000' 

4 
SELECT name,surname,"N-GR" 
from students 
where to_char(BDT, 'MONTH')=JUNE 

5 
SELECT name,surname,"N-GR" 
from students 
where to_char(BDT, 'MONTH')=to_char(sysdate, 'MONTH') 

6 
SELECT name,surname,"N-GR" 
from students 
order by "N-GR" 

7 
SELECT name,surname,"N-GR" 
from (SELECT name,surname,"N-GR" 
FROM students 
ORDER BY surname DESC) 
order by "N-GR" 

8 
SELECT name,surname 
from students 
where score>4 
order by score 

9 
SELECT name,surname 
FROM students 
ORDER BY score DESC FETCH FIRST 5 ROWS ONLY 

10 
SELECT CASE 
WHEN risk between 7 and 11 THEN 'очень высокий' 
WHEN risk between 5 and 8 THEN 'высокий' 
WHEN risk between 3 and 6 THEN 'средний' 
WHEN risk between 1 and 4 THEN 'низкий' 
WHEN risk <2 THEN 'очень низкий' 
ELSE 'no match' 
END 
FROM hobbies 


1 
SELECT COUNT(distinct concat('name','surname')),"N-GR" 
FROM students 
group by "N-GR" 

2 
SELECT AVG(score),"N-GR" 
FROM students 
group by "N-GR" 
3 
SELECT COUNT(name),surname 
FROM students 
group by surname 

4 
SELECT COUNT(concat(name,surname)),to_char(BDT, 'YYYY') 
FROM students 
group by to_char(BDT, 'YYYY') 

5 
SELECT AVG(score),substr("N-GR",1,1) 
FROM students 
group by substr("N-GR",1,1) 

6 


7 
SELECT AVG(score),"N-GR" 
FROM students 
group by "N-GR" 
having AVG(score)>=3.5 
order by AVG(score); 

8  

9 
SELECT count(name),max(score),AVG(score),min(score),"N-GR" 
FROM students 
group by "N-GR" 

10 


11 
select s.N_GROUP,N_Z,NAME,SURNAME,SCORE from 
( select max(score) sc,n_group from students$ 
group by n_group) a,students$ s 
where a.n_group=s.n_group and sc=score 

Групповые функции

1 
SELECT students$.N_z, 
students$.Name, 
students$.Surname, 
hobbies$.Name 
FROM students$, 
students_hobbies$,hobbies$ 
WHERE students$.N_z= students_hobbies$.N_z 
and hobbies$.id= students_hobbies$.id; 
2 
SELECT students$.N_z, 
students$.Name, 
students$.Surname, 
hobbies$.Name, 
students_hobbies$.date_start 
FROM students$, 
students_hobbies$,hobbies$ 
WHERE students$.N_z= students_hobbies$.N_z 
and hobbies$.id= students_hobbies$.id 
and students_hobbies$.date_start=( 
SELECT min(students_hobbies$.date_start) 
FROM students_hobbies$ ) 
3 
select max(name),max(surname),max(N_z),max(date_birth) 
from(select s.n_z,s.nAME,s.surname,S.SCORE,h.risk,s.date_birth 
from hobbies$ h,students_hobbies$ sh,students$ s 
where sh.hobby_id=h.id and sh.N_Z=s.N_Z and s.score>(select avg(score) from students$) 
) 
group by N_Z 
having sum(risk)>0.9 
ORDER BY sum(risk) DESC; 

4 
select s.surname,s.name,s.n_z,s.date_birth,h.name,trunc(MONTHS_BETWEEN(sh.date_finish,sh.date_start),0) 
from hobbies$ h,students_hobbies$ sh,students$ s 
where sh.hobby_id=h.id and sh.N_Z=s.N_Z and sh.date_finish<sysdate 
5 
 
6 
select avg("MAX(S.SCORE)") 
from ( 
select max(s.score),max(s.n_group) 
from hobbies$ h,students_hobbies$ sh,students$ s 
where sh.hobby_id=h.id and sh.N_Z=s.N_Z and date_finish>sysdate 
group by s.n_z) 
group by "MAX(S.N_GROUP)" 
7 

8 
select h.name,h.id 
from hobbies$ h,students_hobbies$ sh,students$ s 
where sh.hobby_id=h.id and sh.N_Z=s.N_Z and s.score=(select max(s.score) from students$ s) 
9 

10 

11 

12 

13 
select s.n_z n_z,surname,name,date_birth,substr(n_group,1,1) 
from students_hobbies$ sh,students$ s 
where sh.N_Z(+)=s.N_Z and id is null and score=5 
order by SUBSTR(N_GROUP,1,1) , DATE_BIRTH desc 
14 

15 
select name,count(n_z) 
from hobbies$ h,students_hobbies$ sh 
where sh.hobby_id(+)=h.id 
group by name 
16 
select max(h.id) id 
from hobbies$ h,students_hobbies$ sh 
where sh.hobby_id(+)=h.id 
group by name 
order by count(n_z) desc fetch first 1 rows only 
17 
select * 
from hobbies$ h,students_hobbies$ sh,students$ s 
where ....

18 
select id 
from hobbies$ h 
order by risk desc fetch first 3 rows only 
19 
select max(s.name),max(surname),min(date_start) 
from hobbies$ h,students_hobbies$ sh,students$ s 
where sh.hobby_id=h.id and sh.N_Z=s.N_Z and date_finish>sysdate 
group by s.n_z 
order by min(date_start) fetch first 10 rows only 
20 
select gr from( 
select max(s.name),max(surname),min(date_start),min(n_group) gr 
from hobbies$ h,students_hobbies$ sh,students$ s 
where sh.hobby_id=h.id and sh.N_Z=s.N_Z and date_finish<sysdate 
group by s.n_z 
order by min(date_start) fetch first 10 rows only 
) 
group by gr 
21 
create or replace view "STUDENTS_V2" as 
select n_z,name,surname 
from students$ 
order by score desc; 

25 

26 

27 

28 
select substr(n_group,1,1),surname,max(score),min(score) from students$ 
group by surname, substr(n_group,1,1) 
29 
select count(h.name),to_char(DATE_BIRTH,'yyyy') 
from hobbies$ h,students_hobbies$ sh,students$ s 
where sh.hobby_id=h.id and sh.N_Z=s.N_Z 
group by to_char(DATE_BIRTH,'yyyy') 

31 
sELECT avg(score),to_char(DATE_BIRTH,'mm') 
from hobbies$ h,students_hobbies$ sh,students$ s 
where sh.hobby_id=h.id and sh.N_Z=s.N_Z and h.name='Oooaie' 
group by to_char(DATE_BIRTH,'mm') 
32 
sELECT max(s.name) name,max(surname) surname,max(n_group) n_group 
from hobbies$ h,students_hobbies$ sh,students$ s 
where sh.hobby_id=h.id and sh.N_Z=s.N_Z 
group by s.n_z 

36 
sELECT last_day('01-APR-2018') 
from
dual 
37 
select next_day(sysdate,'saturday') from dual 
38 
select to_char(sysdate,'cc'),to_char(sysdate,'ww'),to_char(sysdate,'ddd') from dual 

39 
select max(s.name),max(surname),max(h.name), case when max(date_finish)<sysdate then 'caeii?ee' else 'caieiaaony' end 
from hobbies$ h,students_hobbies$ sh,students$ s 
where sh.hobby_id=h.id and sh.N_Z=s.N_Z 
group by s.n_z 
40 
select n_group,count("2") "2",count("3") "3",count("4") "4",count("5") "5" from 
( 
select n_group 
, 
case when 
round(score,0)=2 then round(score,0) else null 
end "2", 
case when 
round(score,0)=3 then round(score,0) else null 
end "3", 
case when 
round(score,0)=4 then round(score,0) else null 
end "4", 
case when 
round(score,0)=5 then round(score,0) else null 
end "5" 

from hobbies$ h,students_hobbies$ sh,students$ s 
where sh.hobby_id=h.id and sh.N_Z=s.N_Z 
) 
group by n_group